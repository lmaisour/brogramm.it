<head>
  <meta charset="utf-8" />
  <!-- Firebase -->
  <script src="https://cdn.firebase.com/js/client/1.0.17/firebase.js"></script>

  <!-- CodeMirror and its JavaScript mode file -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/4.5.0/codemirror.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/4.5.0/mode/javascript/javascript.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/4.5.0/codemirror.css" />

  <!-- Firepad -->
  <link rel="stylesheet" href="https://cdn.firebase.com/libs/firepad/1.0.0/firepad.css" />
  <script src="https://cdn.firebase.com/libs/firepad/1.0.0/firepad.min.js"></script>

  <!-- OpenTok -->
  <script src="http://static.opentok.com/v0.91/js/TB.min.js" type="text/javascript"></script>

  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/0.10.0/lodash.min.js"></script>

</head>

<body>

   <div id="videobox">

      <script type="text/javascript">
      var apiKey =  44979352;
      var sessionId = "<%= @room.sessionId %>";
      var token = "<%= @tok_token %>";

      var session;

      TB.setLogLevel(TB.DEBUG);
    //session.connect(apiKey, token);
    var session = TB.initSession(sessionId);
    session.addEventListener('sessionConnected', sessionConnectedHandler);
    session.addEventListener('streamCreated', streamCreatedHandler);
    session.connect(apiKey, token);


    var publisher;
    function sessionConnectedHandler(event) {
      publisher = TB.initPublisher(apiKey, 'videobox');
      session.publish(publisher);

          // Subscribe to streams that were in the session when we connected
          subscribeToStreams(event.streams);
        }

        function streamCreatedHandler(event) {
          // Subscribe to any new streams that are created
          subscribeToStreams(event.streams);
        }

        function subscribeToStreams(streams) {
          for (var i = 0; i < streams.length; i++) {
            // Make sure we don't subscribe to ourself
            if (streams[i].connection.connectionId == session.connection.connectionId) {
              return;
            }

            // Create the div to put the subscriber element in to
            var div = document.createElement('div');
            div.setAttribute('id', 'stream' + streams[i].streamId);
            document.body.appendChild(div);

            // Subscribe to the stream
            session.subscribe(streams[i], div.id);
          }
        }
        </script>
      </div>
    <div class="well1">
      <% if current_user %>
      <%= render 'form' %>
      <div class="panel panel-default" id="comments">
        <div class="panel-body">
          <ul class="media-list">
            <%= render @room.comments %>
            <% end %>
          </ul>
        </div>
      </div>
    </div>
</div>
  <div id="firepad-container"></div>
  <script>
    function init() {
      //// Initialize Firebase.
      var firepadRef = getExampleRef();

      //// Create CodeMirror (with line numbers and the JavaScript mode).
      var codeMirror = CodeMirror(document.getElementById('firepad-container'), {
        lineNumbers: true,
        mode: 'javascript'
      });

      //// Create Firepad.
       var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror, {
        defaultText: '// Lets start brogramming!'
      });
    }

    // Helper to get hash from end of URL or generate a random one.
    function getExampleRef() {
      var ref = new Firebase('https://firepad.firebaseio-demo.com');
      var hash = window.location.hash.replace(/#/g, '');
      if (hash) {
        ref = ref.child(hash);
        document.getElementById("whatever").innerHTML = hash;
      } else {
        ref = ref.push(); // generate unique location.
        window.location = window.location + '#' + ref.name(); // add it as a hash to the URL.
      }
      if (typeof console !== 'undefined')
        console.log('Firebase data: ', ref.toString());
      return ref;
    }

    init();
  </script>
   <div class="angularapp">

      <section id="todoapp" ng-controller="MainCtrl">
        <ng-view></ng-view>
        <header id="header">
          <h1>Plan it out</h1>
          <form id="todo-form" ng-submit="save(activeTodo)">
            <input 
            id="new-todo" 
            placeholder="What needs to be done?" 
            ng-model="activeTodo.title" 
            autofocus>
          </form>
        </header>

        <section id="main" ng-show="todos.length" ng-cloak>
          
          <ul id="todo-list">
            <li ng-repeat="todo in todos | filter:statusFilter track by $index" ng-class="{completed: todo.completed, editing: todo == editedTodo}">
              <div class="view">
                <input 
                class="toggle" 
                type="checkbox" 
                ng-model="todo.completed"
                ng-click="checkAndSave(todo)">
                <label ng-dblclick="edit(todo)">{{todo.title}}</label>
                <button class="destroy" ng-click="remove(todo)"></button>
              </div>
            </li>
          </ul>
        </section>
      </section>
    </div>
  </div>
</body>
